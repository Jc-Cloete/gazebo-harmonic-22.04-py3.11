name: Build and Release Gazebo Image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

    
env:
  DOCKERHUB_USERNAME: jccloete
      
jobs:
  build-and-release:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Gazebo Harmonic image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        tags: ${{ env.DOCKERHUB_USERNAME }}/gazebo-harmonic-22.04-py3.11:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        load: true

    - name: Run container and copy python bindings
      run: |
        docker run -d --name gazebo-container ${{ env.DOCKERHUB_USERNAME }}/gazebo-harmonic-22.04-py3.11:${{ github.sha }} tail -f /dev/null
        docker exec gazebo-container find /python_package/dist -name "gazebo_py_bindings-*.whl" -exec cp {} /tmp/ \;
        docker exec gazebo-container find /python_package/dist -name "gazebo_py_bindings-*.tar.gz" -exec cp {} /tmp/ \;
        docker cp gazebo-container:/tmp/ .
        docker rm -f gazebo-container

    - name: Upload python binding to artifacts
      uses: actions/upload-artifact@v2
      with:
        name: python_bindings
        path: |
          tmp

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Login to DockerHub
      if: github.event_name == 'release'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push to DockerHub
      if: github.event_name == 'release'
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKERHUB_USERNAME }}/gazebo-harmonic-22.04-py3.11:latest
          ${{ env.DOCKERHUB_USERNAME }}/gazebo-harmonic-22.04-py3.11:${{ github.event.release.tag_name }}

    - name: Publish PyPi package.
      if: github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        pip install twine
        twine upload tmp/*
